apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "go-ship-it.fullname" . }}
  labels:
    {{- include "go-ship-it.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "go-ship-it.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toJson .Values.config | sha256sum }}
        checksum/secret: {{ printf "%s.%s" .Values.githubsecret .Values.keypem | sha256sum }} 
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "go-ship-it.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: key
          secret:
            secretName: {{ include "go-ship-it.fullname" . }}
            items: 
              - key: "key.pem"
                path: "key.pem"
        - name: config
          configMap:
            name: {{ include "go-ship-it.fullname" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "go-ship-it.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --config=/config/config.yaml
          env:
            - name: GITHUB_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "go-ship-it.fullname" . }}
                  key: webhook-secret
            - name: GITHUB_KEYFILE
              value: /keys/key.pem
          volumeMounts:
            - name: key
              mountPath: /keys/
            - name: config
              mountPath: /config/config.yaml
              subPath: config.yaml
          ports:
            - name: http
              containerPort: {{ default 80 .Values.config.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
